go build -C $BITFIELD_DIR -o $TMPDIR/bitfield

# Check the output defaults to stdout
exec $TMPDIR/bitfield -in in.go -type A
! stderr .
cmp stdout want.go

# Check we catch errors while creating the output file
exec touch out.go
exec chmod ugo= out.go
! exec $TMPDIR/bitfield -in in.go -out out.go
! stdout .
cmp stderr want.err

-- in.go --
package testpkg

type A struct {
	F1 uint16 `bitfield:"2"`
	F2 uint8  `bitfield:"3"`
}

-- want.go --
package testpkg

// Code generated by github.com/arl/bitfield. DO NOT EDIT.

type A uint8

func (a A) F1() uint16 {
	return uint16(a & 0x3)
}

func (a A) SetF1(val uint16) A {
	return a&^0x3 | A(val&0x3)
}

func (a A) F2() uint8 {
	return uint8((a >> 2) & 0x7)
}

func (a A) SetF2(val uint8) A {
	return a&^(0x7<<2) | (A(val&0x7) << 2)
}
-- want.err --
bitfield, fatal error:
	output file: open out.go: permission denied
