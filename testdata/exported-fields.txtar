# Control we keep the fields and struct visibility
go build -C $BITFIELD_DIR -o $TMPDIR/bitfield
exec $TMPDIR/bitfield -in in.go -out out.go
! stderr .
cmp out.go want.go

-- in.go --
package testpkg

type a struct {
	coarseX    uint8 `bitfield:"2"`
	CoarseY    uint8 `bitfield:"3"`
}

type B struct {
	CoarseX    uint8 `bitfield:"2"`
	coarseY    uint8 `bitfield:"3"`
}

-- want.go --
package testpkg

// Code generated by github.com/arl/bitfield. DO NOT EDIT.

type a uint8

func (s a) coarseX() uint8 {
	return uint8(s & 0x3)
}

func (s *a) setCoarseX(val uint8) {
	*s &^= 0x3
	*s |= a(val & 0x3)
}

func (s a) CoarseY() uint8 {
	return uint8((s >> 2) & 0x7)
}

func (s *a) SetCoarseY(val uint8) {
	*s &^= 0x7 << 2
	*s |= a(val&0x7) << 2
}

type B uint8

func (b B) CoarseX() uint8 {
	return uint8(b & 0x3)
}

func (b *B) SetCoarseX(val uint8) {
	*b &^= 0x3
	*b |= B(val & 0x3)
}

func (b B) coarseY() uint8 {
	return uint8((b >> 2) & 0x7)
}

func (b *B) setCoarseY(val uint8) {
	*b &^= 0x7 << 2
	*b |= B(val&0x7) << 2
}
