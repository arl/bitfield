# Control we correctly skip non-tagged fields/structs.
go build -C $BITFIELD_DIR -o $TMPDIR/bitfield
exec $TMPDIR/bitfield -in in.go -out out.1.go -type C
cmp out.1.go want.1.go
! stdout .
! stderr .

# Error message if B has no bitfield tag.
! exec $TMPDIR/bitfield -in in.go -out out.2.go -type B
! stdout .
cmp stderr want.2

-- in.go --
package testpkg

type A struct {
	F1 uint8 `json:"f1"`
	F2 uint8 `json:"f2"`
	F3 uint16
	F4 uint8 `json:"f4"`
}

type B struct {
	F1 uint8
	F2 uint8
	F3 uint16
	F4 uint8
}

type C struct {
	F1 uint8
	F2 uint8 `bitfield:"7"`
	F3 uint16
	F4 uint8
}

-- want.1.go --
package testpkg

// Code generated by github.com/arl/bitfield. DO NOT EDIT.

type C uint8

func (c C) F2() uint8 {
	return uint8(c & 0x7f)
}

func (c C) SetF2(val uint8) C {
	return c&^0x7f | C(val&0x7f)
}
-- want.2 --
bitfield, fatal error:
	nothing to generate
