# Control we handle empty structs.
go build -C $BITFIELD_DIR -o $TMPDIR/bitfield
exec $TMPDIR/bitfield -in in.go
! stderr .
cmp stdout want.1.go

-- in.go --
package testpkg

type A struct {}

type B struct {
	CoarseX uint8 `bitfield:"bits=2"`
	CoarseY uint8 `bitfield:"bits=3"`
}

-- want.1.go --
package testpkg

// Code generated by github.com/arl/bitfield. DO NOT EDIT.

type B uint8

func (s B) CoarseX() uint8 {
	return uint8(s & 0x3)
}

func (s B) SetCoarseX(val uint8) B {
	return s&^0x3 | B(val&0x3)
}

func (s B) CoarseY() uint8 {
	return uint8((s >> 2) & 0x7)
}

func (s B) SetCoarseY(val uint8) B {
	return s&^(0x7<<2) | (B(val&0x7) << 2)
}